{"version":3,"sources":["db.js","Pages/NotePage.js","common.js","Pages/SignInPage.js","Pages/SignUpPage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","initialValue","document","nodes","object","type","text","NotePage","state","selected","notes","title","content","isLoading","isShown","user","_handleAddNoteButton","_callee","_ref2","email","id","newNote","_args","arguments","regenerator_default","a","wrap","_context","prev","next","length","undefined","uuid","Plain","deserialize","createdAt","Timestamp","fromDate","Date","_this","collection","doc","set","Object","objectSpread","JSON","stringify","toJSON","t0","console","log","setState","defineProperty","stop","_handleNoteSelect","noteId","_autoSave","debounce","asyncToGenerator","mark","_callee2","_context2","update","catch","error","_handleTitleChange","_ref4","value","newNotes","_handleContentChange","_ref5","_handleLogOut","_callee3","_context3","auth","signOut","props","history","push","_handleEditorKeyDown","event","editor","key","preventDefault","_handleNoteDelete","_callee4","_ref7","updatedNotes","updatedNotesArray","deletedIndex","newSelectedIndex","_context4","delete","keys","values","sort","b","seconds","forEach","note","index","splice","this","_ismounted","that","onAuthStateChanged","prevProps","prevState","where","orderBy","limit","get","res","size","data","Value","fromJSON","parse","latestNote","username","displayName","_this2","_this$state","react_default","createElement","Fragment","Pane","height","SideSheet","position","Position","LEFT","width","isMobile","onCloseComplete","background","className","Menu","Group","Popover","BOTTOM_RIGHT","Item","icon","onSelect","display","alignItems","Avatar","name","sizeLimitOneCharacter","marginRight","Text","fontWeight","flex","overflowX","overflowY","map","serialize","flexDirection","justifyContent","marginX","majorScale","marginTop","IconButton","appearance","iconSize","onClick","paddingX","paddingTop","marginBottom","Heading","slate_react_es","placeholder","onKeyDown","onChange","_ref9","style","_ref10","Spinner","Component","compose","withSizes","_ref11","withRouter","SignInPage","password","errorMessage","_handleSignin","signInWithEmailAndPassword","message","_handleChange","_ref2$target","target","paddingY","elevation","border","textAlign","TextInput","required","intent","padding","color","Button","_ref3","SignUpPage","_handleSignup","createUserWithEmailAndPassword","sent","updateProfile","uid","_ref3$target","App","react_router_dom","react_router","exact","path","component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.372489b2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\n\n// firebase api 설정 값들은 public값이므로 숨길 필요가 없다. .env 에 시크릿 값을 적어도 빌드 시 노출된다.\nfirebase.initializeApp({\n  apiKey: \"AIzaSyD70mOFNDK4VjoQOw9JBItSw0_aME3EeWw\",\n  authDomain: \"notes-d5c0d.firebaseapp.com\",\n  databaseURL: \"https://notes-d5c0d.firebaseio.com\",\n  projectId: \"notes-d5c0d\",\n  storageBucket: \"notes-d5c0d.appspot.com\",\n  messagingSenderId: \"1001740796289\",\n  appId: \"1:1001740796289:web:4c92c4b3621037cc\"\n});\n\nexport default firebase\nexport const db = firebase.firestore();\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport withSizes from \"react-sizes\";\nimport { compose } from \"recompose\";\nimport { debounce } from \"lodash\";\nimport uuid from \"uuid/v4\";\nimport {\n  Pane,\n  Heading,\n  Menu,\n  Text,\n  Avatar,\n  Popover,\n  IconButton,\n  SideSheet,\n  Position,\n  Spinner,\n  majorScale\n} from \"evergreen-ui\";\nimport { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport Plain from \"slate-plain-serializer\";\n\nimport firebase, { db } from \"../db\";\nimport { MOBILE_WIDTH } from \"../common\";\n\nconst initialValue = {\n  document: {\n    nodes: [\n      {\n        object: \"block\",\n        type: \"paragraph\",\n        nodes: [\n          {\n            object: \"text\",\n            text: \"A line of text in a paragraph.\"\n          }\n        ]\n      }\n    ]\n  }\n};\n\n\nclass NotePage extends Component {\n  state = {\n    selected: \"\",\n    notes: {},\n    title: {},\n    content: {},\n    isLoading: true,\n    isShown: false,\n    user: null\n  };\n  componentWillUnmount() {\n    this._ismounted = false;\n  }\n\n  async componentDidMount() {\n    const that = this;\n    this._ismounted = true;\n\n    firebase.auth().onAuthStateChanged(user => {\n      if (user && that._ismounted) {\n        that.setState({ user });\n      } else {\n        that.props.history.push('/signin')\n      }\n    });\n  }\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.user == null && this.state.user != null) {\n      let { user } = this.state;\n      let res = await db\n        .collection(\"notes\")\n        .where(\"user\", \"==\", user.email)\n        .orderBy(\"createdAt\", \"desc\")\n        .limit(20)\n        .get();\n\n      let notes = {};\n      if (res.size === 0) {\n        await this._handleAddNoteButton({ email: user.email });\n      } else {\n        res.forEach(doc => {\n          let note = doc.data();\n          notes[note.id] = {\n            ...note,\n            title: Value.fromJSON(JSON.parse(note.title)),\n            content: Value.fromJSON(JSON.parse(note.content))\n          };\n        });\n\n        let latestNote = Object.values(notes)[0];\n        this.setState({\n          selected: latestNote.id,\n          title: latestNote.title || initialValue,\n          content: latestNote.content || initialValue,\n          notes\n        });\n      }\n\n      this.setState({\n        isLoading: false,\n        username: user.displayName,\n        email: user.email\n      });\n    }\n  }\n  _handleAddNoteButton = async ({ email } = { email: null }) => {\n    let id = uuid();\n    const newNote = {\n      id,\n      title: Plain.deserialize(\"\"),\n      content: Plain.deserialize(\"\"),\n      createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\n      user: email || this.state.user.email\n    };\n\n    try {\n      await db\n        .collection(\"notes\")\n        .doc(id)\n        .set({\n          ...newNote,\n          title: JSON.stringify(newNote.title.toJSON()),\n          content: JSON.stringify(newNote.content.toJSON())\n        });\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({\n      notes: { ...this.state.notes, [id]: newNote },\n      selected: id,\n      title: newNote.title,\n      content: newNote.content,\n      isShown: false\n    });\n  };\n\n  _handleNoteSelect = noteId => {\n    this.setState({\n      selected: noteId,\n      title: this.state.notes[noteId].title,\n      content: this.state.notes[noteId].content,\n      isShown: false\n    });\n  };\n\n  _autoSave = debounce(async () => {\n    await db\n      .collection(\"notes\")\n      .doc(this.state.selected)\n      .update({\n        title: JSON.stringify(this.state.title.toJSON()),\n        content: JSON.stringify(this.state.content.toJSON())\n      })\n      .catch(error => console.log(\"error updating doc: \" + error));\n  }, 500);\n\n  _handleTitleChange = ({ value }) => {\n    const newNotes = {\n      ...this.state.notes,\n      [this.state.selected]: {\n        ...this.state.notes[this.state.selected],\n        title: value\n      }\n    };\n    this.setState({ notes: newNotes, title: value });\n    this._autoSave();\n  };\n\n  _handleContentChange = ({ value }) => {\n    const newNotes = {\n      ...this.state.notes,\n      [this.state.selected]: {\n        ...this.state.notes[this.state.selected],\n        content: value\n      }\n    };\n    this.setState({ notes: newNotes, content: value });\n    this._autoSave();\n  };\n\n  _handleLogOut = async () => {\n    try {\n      await firebase.auth().signOut();\n      this.props.history.push(\"/signin\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  _handleEditorKeyDown = (event, editor, next) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    } else {\n      return next();\n    }\n  };\n\n  _handleNoteDelete = async ({ noteId }) => {\n    try {\n      await db\n        .collection(\"notes\")\n        .doc(noteId)\n        .delete();\n      if (Object.keys(this.state.notes).length === 1) {\n        this.setState({ notes: {} });\n        await this._handleAddNoteButton();\n      } else {\n        let updatedNotes = { ...this.state.notes };\n        let updatedNotesArray = Object.values(updatedNotes).sort(\n          (a, b) => b.createdAt.seconds - a.createdAt.seconds\n        );\n\n        let deletedIndex = 0;\n        updatedNotesArray.forEach((note, index) => {\n          if (note.id === noteId) {\n            deletedIndex = index;\n            return;\n          }\n        });\n        updatedNotesArray.splice(deletedIndex, 1);\n        let newSelectedIndex = deletedIndex - 1 >= 0 ? deletedIndex - 1 : 0;\n        delete updatedNotes[noteId];\n\n        this.setState({\n          notes: updatedNotes,\n          selected: updatedNotesArray[newSelectedIndex].id,\n          title: updatedNotesArray[newSelectedIndex].title,\n          content: updatedNotesArray[newSelectedIndex].content\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    const { notes, title, content, isLoading, user } = this.state;\n    return (\n      <React.Fragment>\n        {!user ? (\n          <Pane\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            height={400}\n          >\n            <Spinner />\n          </Pane>\n        ) : (\n          <Pane height=\"100%\">\n            <SideSheet\n              position={Position.LEFT}\n              isShown={this.state.isShown}\n              width={this.props.isMobile ? this.props.width - 70 : 250}\n              onCloseComplete={() => this.setState({ isShown: false })}\n            >\n              <Pane height=\"100%\" background=\"tint1\" className=\"sidebar\">\n                {/* display: flex */}\n                <Menu>\n                  <Pane>\n                    <Menu.Group>\n                      <Popover\n                        position={Position.BOTTOM_RIGHT}\n                        content={\n                          <Menu>\n                            <Menu.Group>\n                              <Menu.Item\n                                icon=\"log-out\"\n                                onSelect={this._handleLogOut}\n                              >\n                                로그아웃\n                              </Menu.Item>\n                            </Menu.Group>\n                          </Menu>\n                        }\n                      >\n                        <Menu.Item>\n                          <Pane display=\"flex\" alignItems=\"center\">\n                            <Avatar\n                              name={user.displayName}\n                              size={25}\n                              sizeLimitOneCharacter={25}\n                              marginRight={5}\n                            />\n                            <Text fontWeight={600}>{user.displayName}</Text>\n                          </Pane>\n                        </Menu.Item>\n                      </Popover>\n                    </Menu.Group>\n                  </Pane>\n                  <Pane\n                    className=\"note-list\"\n                    flex={1}\n                    overflowX=\"hidden\"\n                    overflowY=\"auto\"\n                  >\n                    <Menu.Group>\n                      {Object.values(notes).map(note => (\n                        <Menu.Item\n                          key={note.id}\n                          onSelect={() => this._handleNoteSelect(note.id)}\n                        >\n                          <Text fontWeight={ note.id === this.state.selected ? 700 : 500 }>{Plain.serialize(note.title) || \"제목 없음\"}</Text>\n                        </Menu.Item>\n                      ))}\n                    </Menu.Group>\n                  </Pane>\n                  <Pane>\n                    <Menu.Group>\n                      <Menu.Item\n                        onSelect={this._handleAddNoteButton}\n                        icon=\"edit\"\n                      >\n                        새 노트 작성하기\n                      </Menu.Item>\n                    </Menu.Group>\n                  </Pane>\n                </Menu>\n              </Pane>\n            </SideSheet>\n            <Pane display=\"flex\" flexDirection=\"column\" height=\"100%\">\n              <Pane\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                marginX={majorScale(2)}\n                marginTop={majorScale(2)}\n              >\n                <IconButton\n                  appearance=\"minimal\"\n                  icon=\"menu\"\n                  iconSize={18}\n                  onClick={() => this.setState({ isShown: true })}\n                />\n                <Popover\n                  content={\n                    <Menu>\n                      <Menu.Group>\n                        <Menu.Item\n                          icon=\"delete\"\n                          onSelect={() =>\n                            this._handleNoteDelete({\n                              noteId: this.state.selected\n                            })\n                          }\n                        >\n                          노트 삭제\n                        </Menu.Item>\n                      </Menu.Group>\n                    </Menu>\n                  }\n                >\n                  <IconButton appearance=\"minimal\" icon=\"more\" iconSize={18} />\n                </Popover>\n              </Pane>\n              <Pane\n                paddingX={this.props.isMobile ? 15 : 0}\n                width={this.props.isMobile ? \"100%\" : MOBILE_WIDTH}\n                marginX=\"auto\"\n                paddingTop={15}\n              >\n                <Pane marginBottom={20}>\n                  <Heading size={900}>\n                    {isLoading ? (\n                      <Text>title..</Text>\n                    ) : (\n                      <Editor\n                        placeholder=\"Title here..\"\n                        value={title}\n                        onKeyDown={this._handleEditorKeyDown}\n                        onChange={({ value }) => {\n                          this._handleTitleChange({ value });\n                        }}\n                      />\n                    )}\n                  </Heading>\n                </Pane>\n                <Pane flex={1} overflowY=\"auto\">\n                  {isLoading ? (\n                    <Text>content..</Text>\n                  ) : (\n                    <Editor\n                      placeholder=\"Content here..\"\n                      value={content}\n                      style={{ height: \"100%\" }}\n                      onChange={({ value }) =>\n                        this._handleContentChange({ value })\n                      }\n                    />\n                  )}\n                </Pane>\n              </Pane>\n            </Pane>\n          </Pane>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default compose(\n  withSizes(({ width }) => ({ isMobile: width < MOBILE_WIDTH, width })),\n  withRouter\n)(NotePage);\n","export const MOBILE_WIDTH = 730;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport withSizes from \"react-sizes\";\nimport { compose } from \"recompose\";\n\nimport { Pane, TextInput, Heading, Button, Text } from \"evergreen-ui\";\n\nimport firebase from \"../db\";\nimport { MOBILE_WIDTH } from \"../common\";\n\nclass SignInPage extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errorMessage: \"\"\n  };\n\n  _handleSignin = async () => {\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password);\n      this.props.history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n      this.setState({ errorMessage: error.message });\n    }\n  };\n\n  _handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  \n  render() {\n    return (\n      <Pane background=\"tint1\" height=\"100%\" paddingTop={50}>\n        <Pane\n          background=\"white\"\n          marginX=\"auto\"\n          paddingY={30}\n          paddingX={ this.props.isMobile ? 15 : 50}\n          elevation={3}\n          width={ this.props.isMobile ? 'calc(100% - 30px)' : 400}\n          border=\"default\"\n        >\n          <Heading size={600} marginBottom={20} textAlign=\"center\">\n            로그인\n          </Heading>\n          <TextInput\n            name=\"email\"\n            onChange={this._handleChange}\n            placeholder=\"이메일\"\n            marginBottom={10}\n            width=\"100%\"\n            value={this.state.email}\n            required\n          />\n          <TextInput\n            name=\"password\"\n            onChange={this._handleChange}\n            placeholder=\"비밀번호\"\n            width=\"100%\"\n            type=\"password\"\n            value={this.state.password}\n            required\n          />\n          <Pane intent=\"danger\" padding={10}>\n            <Text color=\"red\">{this.state.errorMessage}</Text>\n          </Pane>\n          <Pane display=\"flex\" justifyContent=\"flex-end\" marginTop={20}>\n            <Button\n              marginRight={10}\n              onClick={() => this.props.history.push(\"/signup\")}\n            >회원가입</Button>\n            <Button\n              appearance=\"primary\"\n              intent=\"none\"\n              onClick={this._handleSignin}\n            >\n              로그인\n            </Button>\n          </Pane>\n        </Pane>\n      </Pane>\n    );\n  }\n}\n\nexport default compose(\n  withSizes(({ width }) => ({ isMobile: width < MOBILE_WIDTH })),\n  withRouter\n)(SignInPage);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport withSizes from \"react-sizes\";\nimport { compose } from \"recompose\";\nimport { Pane, TextInput, Heading, Button, Text } from \"evergreen-ui\";\n\nimport firebase, { db } from \"../db\";\nimport { MOBILE_WIDTH } from \"../common\";\n\n\nclass SignUpPage extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    errorMessage: \"\"\n  };\n  _handleSignup = async () => {\n    try {\n      let { user } = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password);\n      await user.updateProfile({\n        displayName: this.state.username\n      });\n\n      await db.collection(\"users\").doc(user.uid).set({\n        uid: user.uid,\n        email: user.email\n      })\n\n      this.props.history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n      this.setState({ errorMessage: error.message });\n    }\n  };\n  _handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <Pane background=\"tint1\" height=\"100%\" paddingTop={50}>\n        <Pane\n          background=\"white\"\n          marginX=\"auto\"\n          paddingY={30}\n          paddingX={ this.props.isMobile ? 15 : 50}\n          elevation={3}\n          width={ this.props.isMobile ? 'calc(100% - 30px)' : 400}\n          border=\"default\"\n        >\n          <Heading size={600} marginBottom={20} textAlign=\"center\">\n            회원가입\n          </Heading>\n          <TextInput\n            name=\"email\"\n            onChange={this._handleChange}\n            placeholder=\"이메일\"\n            marginBottom={10}\n            width=\"100%\"\n            value={this.state.email}\n            required\n          />\n          <TextInput\n            name=\"password\"\n            onChange={this._handleChange}\n            placeholder=\"비밀번호\"\n            width=\"100%\"\n            type=\"password\"\n            marginBottom={10}\n            value={this.state.password}\n            required\n          />\n          <TextInput\n            name=\"username\"\n            onChange={this._handleChange}\n            placeholder=\"이름\"\n            marginBottom={10}\n            width=\"100%\"\n            value={this.state.username}\n            required\n          />\n\n          <Pane intent=\"danger\" padding={10}>\n            <Text color=\"red\">{this.state.errorMessage}</Text>\n          </Pane>\n          <Pane display=\"flex\" justifyContent=\"flex-end\" marginTop={20}>\n            <Button\n              marginRight={10}\n              onClick={() => this.props.history.push(\"/signin\")}\n            >\n              돌아가기\n            </Button>\n            <Button\n              appearance=\"primary\"\n              intent=\"none\"\n              onClick={this._handleSignup}\n            >\n              가입하기\n            </Button>\n          </Pane>\n        </Pane>\n      </Pane>\n    );\n  }\n}\n\nexport default compose(\n  withSizes(({ width }) => ({ isMobile: width < MOBILE_WIDTH })),\n  withRouter\n)(SignUpPage);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NotePage from \"./Pages/NotePage\";\nimport SignInPage from \"./Pages/SignInPage\";\nimport SignUpPage from \"./Pages/SignUpPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={NotePage} />\n      <Route path=\"/signup\" component={SignUpPage} />\n      <Route path=\"/signin\" component={SignInPage} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}